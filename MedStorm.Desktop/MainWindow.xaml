<Window x:Class="MedStorm.Desktop.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MedStorm.Desktop"
        mc:Ignorable="d"
        xmlns:plot="clr-namespace:Plot"
        Loaded="Window_Loaded" WindowState="Normal" WindowStyle="None"
        Title="PainSensor - Desktop" x:Name="TopWindow" Height="650" Width="900">
    <Window.Resources>
        <SolidColorBrush x:Key="WhiteBrush" Color="#c5e3ee" />
        
        <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{StaticResource WhiteBrush}" BorderThickness="0.5">
                            <Grid Background="#FF03303F">
                                    <TextBlock Text="{TemplateBinding Content}" 
                                               Foreground="{StaticResource WhiteBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <!--<ContentPresenter Margin="20" Content="{TemplateBinding Content}"/>-->
                            </Grid>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <!--Combobox styling-->
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="Gray" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#FF03303F" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#FF03303F" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#FF03303F" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#FF03303F" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
                          BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
                          CornerRadius="0" BorderThickness="1, 1, 1, 1" 
                          Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
                          CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
                          Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" StrokeThickness="5"
                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                    HorizontalAlignment="Center" Fill="{StaticResource WhiteBrush}"
                    VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#FF03303F"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#FF03303F"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                                ClickMode="Press" Focusable="False"
                                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                                  HorizontalAlignment="Left" VerticalAlignment="Center"                              
                                  Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="Hidden" Background="Transparent"
                                 HorizontalAlignment="Left" VerticalAlignment="Center"
                                 Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                                   Focusable="False" AllowsTransparency="True"
                                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" Background="#FF03303F"
                                        MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                        MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="{StaticResource WhiteBrush}"  Margin="0, 1, 0, 0"
                                            CornerRadius="0" BorderThickness="1,1,1,1" 
                                            BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True" Background="#FF03303F">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="Black">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="2.7*"/>
            <ColumnDefinition Width="10*"/>
        </Grid.ColumnDefinitions>

        <Popup x:Name="CommentPopUp" Placement="Center">
            <Grid Background="#FF03303F" Width="400" Height="200">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.6*" />
                    <RowDefinition Height="3*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="Add comment:" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="{StaticResource WhiteBrush}" VerticalAlignment="Bottom"/>
                <TextBox Grid.Row="1" x:Name="CommentTextBox" TextWrapping="Wrap" Background="{StaticResource WhiteBrush}" Margin="10" />
                <StackPanel Grid.Row="2" Orientation="Horizontal" >
                    <Button x:Name="CancelCommentButton" Click="CancelCommentButton_Click" Margin="10,0,0,10" Width="70"
                        Content="Cancel"/>
                    <Button x:Name="SaveCommentButton" Click="SaveCommentButton_Click" Margin="10,0,0,10" Width="70" 
                        Content="Save"/>
                </StackPanel>
            </Grid>
        </Popup>

        <Popup x:Name="PatientIdPopUp" Placement="Center">
            <Grid Background="#FF03303F" Width="400" Height="150">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.6*" />
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="Enter Patient Id:" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="{StaticResource WhiteBrush}" VerticalAlignment="Bottom"/>
                <TextBox Grid.Row="1" x:Name="PatientIdTextBox" Margin="10" Background="{StaticResource WhiteBrush}"/>
                <StackPanel Grid.Row="2" Orientation="Horizontal">
                    <Button x:Name="CanelPatientIdButton" Click="CanelPatientIdButton_Click"  Margin="10,0,0,10" Width="70"
                        Content="Cancel"/>
                    <Button x:Name="SavePatientIdButton"  Margin="10,0,0,10" Width="70" 
                        Content="Save" Click="SavePatientIdButton_Click" />
                </StackPanel>
            </Grid>
        </Popup>

        <!-- 0. column, Skin Condiction and buttons -->
        <Grid Margin='0,10,10,0'>
            <Grid.RowDefinitions>
                <RowDefinition Height="11*"/>
                <RowDefinition Height="11*"/>
                <RowDefinition Height="100*"/>
                <RowDefinition Height="11*"/>
                <RowDefinition Height="11*"/>
                <RowDefinition Height="11*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Button x:Name="PatientIdButton" Click="PatientIdButton_Click" Grid.Row="0" Margin="10,0,0,3"  HorizontalAlignment="Stretch"
                    Content="Enter Patient ID" />
            <ComboBox x:Name="ApplicationsComboBox" Foreground="{StaticResource WhiteBrush}" Grid.Row="1" Margin="10,0,0,3"  HorizontalAlignment="Stretch"
                      SelectionChanged="ApplicationsComboBox_SelectionChanged">
                <ComboBox.Background>
                    <LinearGradientBrush EndPoint="0,1">
                        <GradientStop Color="#FFF0F0F0"/>
                        <GradientStop Color="#FF022E3D" Offset="1"/>
                    </LinearGradientBrush>
                </ComboBox.Background>
                <ComboBoxItem>Anaesthesia</ComboBoxItem>
                <ComboBoxItem>PostOperative</ComboBoxItem>
                <ComboBoxItem>Icu</ComboBoxItem>
                <ComboBoxItem>Infants</ComboBoxItem>
                <ComboBoxItem>Withdrawal</ComboBoxItem>
                <ComboBoxItem>NeuralBlock</ComboBoxItem>
            </ComboBox>

            <plot:RealTimePlotUC Grid.Row="2" x:Name="skinPlot" Margin='5,15,-15,15'
                                 HasFixedVerticalLabels="False" 
                                 PlotTitle="MicroSiemens" 
                                 NoOfSecondsToShow="20.0" 
                                 NoOfVerticalGridLines="2"
                                 PlotCurveWithArea="false"/>

            <Grid Grid.Row="3" Margin="10,0,0,3" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="CloseButton" Grid.Column="0" Click="CloseButton_Click" Content="Close" />
                <Button x:Name="CommentButton" Grid.Column="1" Click="CommentButton_Click" Margin="3,0,0,0"
                    Content="Comment"  />
            </Grid>

            <Button x:Name="ConnectMonitorButton" Grid.Row="4" Margin="10,0,0,3" HorizontalAlignment="Stretch"
                    Content="Connect Monitor" 
                    Click="ConnectMonitorButton_Click"/>

            <Button x:Name="ConnectDisconnectButton" Grid.Row="5" Margin="10,0,0,3" HorizontalAlignment="Stretch"
                    Content="Connect"
                    Click="connect_diconnect_Click"/>
            <Image Grid.Row="6" Source="logo_medstorm.png" Margin="10" Width="150" HorizontalAlignment="Left"/>
        </Grid>

        <!-- 1. column, Numbers and labelse -->
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding ElementName=TopWindow,Path=PainNociceptiveRow}"/>
                <RowDefinition Height="{Binding ElementName=TopWindow,Path=AwakeningRow}"/>
                <RowDefinition Height="{Binding ElementName=TopWindow,Path=NerveBlockRow}"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" VerticalAlignment="Center" >
                <TextBlock x:Name="PainNociceptiveTextBox" Text="Pain-Nociceptive" Foreground="#FF3D7F" FontSize="16" HorizontalAlignment="Center" />
                <TextBlock x:Name="PainNociceptiveValue" Text="--"
                           Foreground="#FF3D7F" FontSize="30" HorizontalAlignment="Center" />
            </StackPanel>
            <StackPanel Grid.Row="1" VerticalAlignment="Center" >
                <TextBlock  Text="Awakening" Foreground="#7FC7AF" FontSize="16" HorizontalAlignment="Center" />
                <TextBlock x:Name="AwakeningValue" Text="--" Foreground="#7FC7AF" FontSize="30" HorizontalAlignment="Center" />
            </StackPanel>
            <StackPanel Grid.Row="2" VerticalAlignment="Center" >
                <TextBlock Text="Nerve Block" Foreground="#FEAB5F" FontSize="16" HorizontalAlignment="Center" />
                <TextBlock x:Name="NerveBlockValue" Text="--" Foreground="#FEAB5F" FontSize="30" HorizontalAlignment="Center" />
            </StackPanel>
        </Grid>

        <!-- 2. column, Time-plot with area -->
        <Grid Grid.Column="2" Margin="0,0,10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding ElementName=TopWindow,Path=PainNociceptiveRow}"/>
                <RowDefinition Height="{Binding ElementName=TopWindow,Path=AwakeningRow}"/>
                <RowDefinition Height="{Binding ElementName=TopWindow,Path=NerveBlockRow}"/>
            </Grid.RowDefinitions>

            <plot:RealTimePlotUC Grid.Row="0" x:Name="PainNociceptive"
                                 Visibility="{Binding ElementName=TopWindow,Path=PainNociceptiveVisibility}"
                                 FillAreaBrush="#FF3D7F"
                                 NoOfSecondsToShow="60.0" 
                                 MaxValue="10" 
                                 HorizontalAxisLabels="0, 1, 3, 5, 7, 8, 10"
                                 NoOfHorizontalGridLines="5" 
                                 PlotCurveWithArea="true"
                                 UpperLimit="3"
                                 LowerLimit="1"/>

            <plot:RealTimePlotUC Grid.Row="1" x:Name="Awakening" 
                                 Visibility="{Binding ElementName=TopWindow,Path=AwakeningVisibility}"
                                 FillAreaBrush="#7FC7AF"
                                 NoOfSecondsToShow="60.0" 
                                 MaxValue="100" 
                                 NoOfHorizontalGridLines="5" 
                                 PlotCurveWithArea="true"
                                 UpperLimit="40"
                                 LowerLimit="0"
                                 />

            <plot:RealTimePlotUC Grid.Row="2" x:Name="NerveBlock" 
                                 Visibility="{Binding ElementName=TopWindow,Path=NerveBlockVisibility}"
                                 FillAreaBrush="#FEAB5F"
                                 NoOfSecondsToShow="60.0" 
                                 MaxValue="10" 
                                 NoOfHorizontalGridLines="5" 
                                 PlotCurveWithArea="true"
                                 UpperLimit="1"
                                 LowerLimit="0"/>
        </Grid>
    </Grid>
</Window>
